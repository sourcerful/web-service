{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shonb\\\\Desktop\\\\IDF\\\\test\\\\ts-app\\\\src\\\\components\\\\Activator.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport { FormControl, FormLabel, FormControlLabel, Typography, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { makeStyles } from '@mui/material/styles';\nimport { createTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Activator = () => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    typo: {\n      textAlign: \"right\"\n    }\n  }));\n  const theme = createTheme();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        className: classes.typo,\n        children: \"Service Activator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          marginLeft: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          focused: false,\n          children: \"Press to activate the service:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: checked,\n              onChange: handleChange,\n              name: \"activator\",\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 52\n            }, this),\n            label: \"Activate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Activator, \"2qLJrvdtgn82ePDQ8QwQTakj5JI=\", true);\n\n_c = Activator;\nexport default Activator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activator\");","map":{"version":3,"sources":["C:/Users/Shonb/Desktop/IDF/test/ts-app/src/components/Activator.tsx"],"names":["React","useState","Switch","FormGroup","FormControl","FormLabel","FormControlLabel","Typography","CssBaseline","ThemeProvider","makeStyles","createTheme","Activator","checked","setChecked","handleChange","event","target","useStyles","theme","typo","textAlign","classes","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,gBAAjC,EAAmDC,UAAnD,EAAsEC,WAAtE,EAAmFC,aAAnF,QAAwG,eAAxG;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,YAAY,GAAIC,KAAD,IAAgD;AACjEF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaJ,OAAd,CAAV;AACH,GAFD;;AAIA,QAAMK,SAAc,GAAGR,UAAU,CAAES,KAAD,KAAmB;AACjDC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE;AADT;AAD2C,GAAnB,CAAD,CAAjC;AAMA,QAAMF,KAAK,GAAGR,WAAW,EAAzB;AACA,QAAMW,OAAO,GAAGJ,SAAS,EAAzB;AAEA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEC,KAAtB;AAAA,8BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAEG,OAAO,CAACF,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAACG,UAAAA,UAAU,EAAE;AAAb,SAAjB;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEV,OAAjB;AAA0B,cAAA,QAAQ,EAAEE,YAApC;AAAkD,cAAA,IAAI,EAAC,WAAvD;AAAmE,cAAA,KAAK,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,oBAA3B;AACI,YAAA,KAAK,EAAC;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CA/BD;;GAAMH,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Switch from \"@mui/material/Switch\"\r\nimport FormGroup from \"@mui/material/FormGroup\"\r\nimport { FormControl, FormLabel, FormControlLabel, Typography, Theme, CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { makeStyles } from '@mui/material/styles'\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nconst Activator = () => {\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(event.target.checked)\r\n    }\r\n   \r\n    const useStyles: any = makeStyles((theme: Theme) => ({\r\n        typo: {\r\n            textAlign: \"right\"\r\n        }\r\n    }));\r\n\r\n    const theme = createTheme()\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>   \r\n            <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n                <Typography variant=\"h2\" className={classes.typo}>Service Activator</Typography>\r\n                <FormControl sx={{marginLeft: 10}}>\r\n                    <FormLabel focused={false}>Press to activate the service:</FormLabel>\r\n                    <FormGroup>\r\n                        <FormControlLabel control={<Switch checked={checked} onChange={handleChange} name=\"activator\" color=\"secondary\"/>} \r\n                            label=\"Activate\"/>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Activator;"]},"metadata":{},"sourceType":"module"}